"""Agent module."""

from dotenv import load_dotenv
from pydantic_ai import Agent
from a2a.types import AgentSkill

from src.mcp_servers import gmail_server
from src.agents.common.agent import load_agent_config

load_dotenv(override=True)

gmail_agent_config = load_agent_config("src/agents/gmail_agent/config.yml")


class GmailAgentCard:
    """
    Gmail Agent Card.
    """

    name: str = gmail_agent_config.name
    description: str = gmail_agent_config.description
    skills: list[AgentSkill] = []
    organization: str = gmail_agent_config.name
    port: int = gmail_agent_config.port
    host: str = gmail_agent_config.host


gmail_agent = Agent(
    model=gmail_agent_config.model,
    mcp_servers=[gmail_server],
    name=gmail_agent_config.name,
    system_prompt=gmail_agent_config.system_prompt,
)


async def run_gmail_agent(task: str) -> str:
    """
    Runs the Gmail AI agent asynchronously with the given task and returns the agent's response.

    Parameters:
        task (str): The instruction or query for the Gmail agent.

    Returns:
        str: The response generated by the Gmail agent.
    """
    async with gmail_agent.run_mcp_servers():
        result = await gmail_agent.run(
            task,
        )
        return result.output


app = gmail_agent.to_a2a()
