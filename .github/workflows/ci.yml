name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Run Ruff Linter
      run: |
        poetry run ruff check . --output-format=github

    - name: Run Ruff Formatter Check
      run: |
        poetry run ruff format --check .

    - name: Run Pylint
      run: |
        poetry run pylint src/ --output-format=colorized --reports=no --score=no

    - name: Run tests (if present)
      run: |
        if [ -d "tests" ] || find . -name "test_*.py" -o -name "*_test.py" | grep -q .; then
          poetry run pytest -v --tb=short
        else
          echo "No tests found, skipping test step"
        fi
      continue-on-error: true 